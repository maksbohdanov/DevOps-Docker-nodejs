name: Docker Image CI

on: [push, pull_request]

jobs:

  lint-code:

    runs-on: ubuntu-latest

    steps:

      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Lint Code Base
        uses: github/super-linter@v4
        env:
          VALIDATE_ALL_CODEBASE: true
          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
        
        
  build-and-push-docker:
  
    needs: lint-code

    runs-on: ubuntu-latest

    steps:

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push
      uses: docker/build-push-action@v3
      with:
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/node_image:latest

  test-docker-image:

    needs: build-and-push-docker

    runs-on: ubuntu-latest

    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Pull Docker image
        run: docker pull ${{ secrets.DOCKERHUB_USERNAME }}/node_image:latest

      - name: Create Docker Network
        run: docker network create net

      - name: Run Docker image
        run: docker run --network net --network-alias app -p 80:80 -d ${{ secrets.DOCKERHUB_USERNAME }}/node_image

      - name: Wait for application start
        run: docker run --network net willwill/wait-for-it app:80 -t 10 -s -- echo "App is running"

      - name: Curl test
        run: curl localhost:80
